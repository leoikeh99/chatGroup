[{"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Register.js":"3","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Login.js":"4","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\AuthState.js":"5","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authReducer.js":"6","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authContext.js":"7","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\types.js":"8","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\setAuthToken.js":"9","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\main\\Home.js":"10","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\routing\\PrivateRoutes.js":"11","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\ChannelState.js":"12","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelContext.js":"13","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelReducer.js":"14","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\helperFunctions.js":"15","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\layout\\Spinner.js":"16","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\AllChannels.js":"17","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\ChannelItem.js":"18","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\MyChannels.js":"19","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\chat\\Chat.js":"20","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav.js":"21","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav2.js":"22","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\MessagesState.js":"23","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesContext.js":"24","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesReducer.js":"25"},{"size":196,"mtime":1610178918000,"results":"26","hashOfConfig":"27"},{"size":1065,"mtime":1610178918000,"results":"28","hashOfConfig":"27"},{"size":1515,"mtime":1610178918000,"results":"29","hashOfConfig":"27"},{"size":1207,"mtime":1610178918000,"results":"30","hashOfConfig":"27"},{"size":1699,"mtime":1610178918000,"results":"31","hashOfConfig":"27"},{"size":1005,"mtime":1610178918000,"results":"32","hashOfConfig":"27"},{"size":106,"mtime":1610178918000,"results":"33","hashOfConfig":"27"},{"size":678,"mtime":1610258495010,"results":"34","hashOfConfig":"27"},{"size":242,"mtime":1610178918000,"results":"35","hashOfConfig":"27"},{"size":3595,"mtime":1610258233283,"results":"36","hashOfConfig":"27"},{"size":569,"mtime":1610178918000,"results":"37","hashOfConfig":"27"},{"size":4386,"mtime":1610258829313,"results":"38","hashOfConfig":"27"},{"size":112,"mtime":1610178918000,"results":"39","hashOfConfig":"27"},{"size":2770,"mtime":1610260410884,"results":"40","hashOfConfig":"27"},{"size":1447,"mtime":1610261402872,"results":"41","hashOfConfig":"27"},{"size":328,"mtime":1610178918000,"results":"42","hashOfConfig":"27"},{"size":1235,"mtime":1610178918000,"results":"43","hashOfConfig":"27"},{"size":1638,"mtime":1610260828341,"results":"44","hashOfConfig":"27"},{"size":1488,"mtime":1610178918000,"results":"45","hashOfConfig":"27"},{"size":4744,"mtime":1610259837754,"results":"46","hashOfConfig":"27"},{"size":2722,"mtime":1610178918000,"results":"47","hashOfConfig":"27"},{"size":1395,"mtime":1610178918000,"results":"48","hashOfConfig":"27"},{"size":1073,"mtime":1610178918000,"results":"49","hashOfConfig":"27"},{"size":114,"mtime":1610178918000,"results":"50","hashOfConfig":"27"},{"size":561,"mtime":1610178918000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1o7ubov",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\index.js",[],["111","112"],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authReducer.js",["113"],"import { AUTH, AUTH_FAIL, GET_USER, SET_LOADER, GET_USER_FAIL } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case AUTH:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        token: action.payload.token,\n        error: null,\n        isAuthenticated: true,\n        loading: null,\n      };\n    case AUTH_FAIL:\n      return {\n        ...state,\n        token: null,\n        error: action.payload,\n        isAuthenticated: null,\n        loading: null,\n      };\n\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: null,\n        isAuthenticated: true,\n        error: null,\n      };\n\n    case GET_USER_FAIL:\n      return {\n        ...state,\n        user: null,\n        loading: null,\n        isAuthenticated: null,\n        error: action.payload,\n      };\n\n    case SET_LOADER:\n      return {\n        ...state,\n        loading: true,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\types.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\setAuthToken.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\main\\Home.js",["114","115","116","117","118"],"import React, { useEffect, useContext, useState } from \"react\";\nimport authContext from \"../../context/auth/authContext\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport Chat from \"../chat/Chat\";\nimport SideNav from \"../nav/SideNav\";\nimport SideNav2 from \"../nav/SideNav2\";\nimport io from \"socket.io-client\";\nimport setAuthToken from \"../../functions/setAuthToken\";\nimport axios from \"axios\";\nconst ENDPOINT = \"/\";\nvar socket;\n\nconst Home = ({ match }) => {\n  const [current, setCurrent] = useState(null);\n  const AuthContext = useContext(authContext);\n  const { getUser, user } = AuthContext;\n\n  const ChannelContext = useContext(channelContext);\n  const {\n    getChannels,\n    createChannel,\n    getUserChannels,\n    userChannels,\n    getMessages,\n    addMessage,\n    getLastMessages,\n  } = ChannelContext;\n\n  useEffect(() => {\n    getUser();\n    socket = io.connect(ENDPOINT);\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      getChannels();\n      getUserChannels();\n      getMessages();\n      getLastMessages();\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const sidenav2 = document.querySelector(\".sideNav2\");\n    if (current) {\n      if (current.joined) {\n        sidenav2.style.animation = \"slideOut 0.1s ease-in forwards\";\n      }\n    }\n  }, [current]);\n\n  useEffect(() => {\n    socket.on(\"recieveMessage\", (message) => {\n      if (localStorage.getItem(\"token\")) {\n        setAuthToken(localStorage.getItem(\"token\"));\n      }\n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n\n      if (\n        match.params.id === undefined ||\n        (match.params.id && message.channelId !== match.params.id)\n      ) {\n      }\n      if (\n        match.params.id !== undefined &&\n        message.channelId === match.params.id\n      ) {\n      }\n    });\n  }, [match.params.id]);\n\n  const clear = (e) => {\n    const overlay = document.querySelector(\".overlay\");\n    const addChannel = document.querySelector(\".addChannel\");\n    overlay.style.display = \"none\";\n    addChannel.style.display = \"none\";\n  };\n\n  const makeChannel = (e) => {\n    e.preventDefault();\n    const name = document.querySelector(\"#makeChannel #name\").value;\n    const desc = document.querySelector(\"#makeChannel textarea\").value;\n    if (name.trim() !== \"\") {\n      createChannel({ name, desc });\n    }\n  };\n\n  useEffect(() => {\n    if (userChannels && userChannels.length !== 0) {\n      const rooms = userChannels.channels.map((channel) => channel._id);\n\n      socket.emit(\"join\", rooms);\n\n      socket.on(\"recieveMessage\", (message) => {\n        addMessage(message);\n      });\n    }\n  }, [userChannels]);\n\n  return (\n    <div className=\"Home\">\n      <div className=\"overlay\"></div>\n      <div className=\"addChannel centralize\">\n        <h4>New Channel</h4>\n        <form id=\"makeChannel\" action=\"\" onSubmit={makeChannel}>\n          <i class=\"fas fa-times\" onClick={clear}></i>\n          <input id=\"name\" type=\"text\" placeholder=\"Channel name\" />\n          <textarea name=\"\" placeholder=\"Channel description\"></textarea>\n          <input type=\"submit\" value=\"Save\" />\n        </form>\n      </div>\n\n      <div className=\"sideNav\">\n        <SideNav match={match} user={user} />\n      </div>\n      <div className=\"sideNav2\">\n        <SideNav2\n          match={match}\n          user={user}\n          userChannels={userChannels}\n          current={current}\n        />\n      </div>\n      <div className=\"main\">\n        <Chat user={user} socket={socket} match={match} setHome={setCurrent} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\routing\\PrivateRoutes.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\ChannelState.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelContext.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelReducer.js",["119"],"import {\n  CREATE_CHANNEL,\n  GET_CHANNELS,\n  SET_LOADER,\n  SEARCH_CHANNELS,\n  JOIN_CHANNEL,\n  GET_MY_CHANNELS,\n  FILTER_USER_CHANNELS,\n  GET_MESSAGES,\n  ADD_MESSAGE,\n  GET_LAST_MESSAGES,\n  SET_LAST_MESSAGES,\n} from \"../types\";\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_LOADER:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case CREATE_CHANNEL:\n      console.log(action.payload);\n      return {\n        ...state,\n        loading: null,\n        channels: [...state.channels, action.payload.channel],\n        userChannels: {\n          ...state.userChannels,\n          channels: [...state.userChannels.channels, action.payload.channel],\n          members: [...state.userChannels.members, [action.payload.member]],\n        },\n      };\n\n    case GET_CHANNELS:\n      return {\n        ...state,\n        loading: null,\n        channels: action.payload,\n      };\n\n    case GET_MY_CHANNELS:\n      return {\n        ...state,\n        loading: null,\n        userChannels: action.payload,\n      };\n\n    case SEARCH_CHANNELS:\n      return {\n        ...state,\n        loading: null,\n        searchedChannels: action.payload,\n      };\n\n    case FILTER_USER_CHANNELS:\n      return {\n        ...state,\n        filteredChannels: state.userChannels.filter((channel) =>\n          channel.name.toLowerCase().includes(action.payload.toLowerCase())\n        ),\n      };\n\n    case JOIN_CHANNEL:\n      console.log(action.payload);\n      return {\n        ...state,\n        userChannels: {\n          ...state.userChannels,\n          channels: [...state.userChannels.channels, action.payload.channel],\n          members: [...state.userChannels.members, action.payload.members],\n        },\n        messages: [...state.messages, action.payload.messages],\n      };\n\n    case GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload,\n      };\n\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.map((message) =>\n          message.channelId === action.payload.channelId\n            ? { ...message, messages: [...message.messages, action.payload] }\n            : message\n        ),\n      };\n\n    case GET_LAST_MESSAGES:\n      return {\n        ...state,\n        lastMessages: action.payload,\n      };\n\n    case SET_LAST_MESSAGES:\n      return {\n        ...state,\n        lastMessages: state.lastMessages.some((lm) => (lm) =>\n          lm.channelId === action.payload.channelId\n        )\n          ? state.lastMessages.map((lm) =>\n              lm.channelId === action.payload.channelId\n                ? { ...lm, ...action.payload }\n                : lm\n            )\n          : [...state.lastMessages, action.payload],\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\helperFunctions.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\AllChannels.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\ChannelItem.js",["120"],"import React, { useContext } from \"react\";\nimport {\n  getInitials,\n  truncate,\n  getUnread,\n} from \"../../functions/helperFunctions\";\nimport authContext from \"../../context/auth/authContext\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport { Link } from \"react-router-dom\";\n\nconst ChannelItem = ({ channel, match }) => {\n  const AuthContext = useContext(authContext);\n  const { user } = AuthContext;\n\n  const ChannelContext = useContext(channelContext);\n  const { joinChannel, userChannels, lastMessages, messages } = ChannelContext;\n\n  const join = (id) => {\n    joinChannel(id);\n  };\n\n  const open = () => {\n    const sidenav2 = document.querySelector(\".sideNav2\");\n    if (userChannels && userChannels.length !== 0) {\n      if (userChannels.channels.some((val) => val._id === channel._id)) {\n        sidenav2.style.animation = \"slideOut 0.1s ease-in forwards\";\n      }\n    }\n  };\n\n  return (\n    <Link to={`/${channel._id}`}>\n      {userChannels && userChannels.length !== 0 ? (\n        <li onClick={open} className=\"channelItem\">\n          {getUnread(channel._id, lastMessages, messages) && (\n            <i class=\"fas fa-circle unread\"></i>\n          )}\n          <span>{getInitials(channel.name)}</span>\n          <p>{truncate(channel.name)}</p>\n          {!userChannels.channels.some((val) => val._id === channel._id) ? (\n            <i\n              className=\"fas fa-plus iconBtn\"\n              onClick={() => join(channel._id)}\n            ></i>\n          ) : (\n            <i class=\"fas fa-check\"></i>\n          )}\n        </li>\n      ) : null}\n    </Link>\n  );\n};\n\nexport default ChannelItem;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\MyChannels.js",["121"],"import React, { useContext, Fragment, useEffect } from \"react\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport ChannelItem from \"./ChannelItem\";\nimport Spinner from \"../layout/Spinner\";\n\nconst MyChannels = ({ text, match }) => {\n  const ChannelContext = useContext(channelContext);\n  const {\n    loading,\n    joinChannel,\n    userChannels,\n    filteredChannels,\n  } = ChannelContext;\n\n  return (\n    <Fragment>\n      {!loading ? (\n        <ul className=\"channelList\">\n          {!filteredChannels && text === \"\" ? (\n            <Fragment>\n              {userChannels.channels.map((channel) => (\n                <ChannelItem\n                  key={channel._id}\n                  channel={channel}\n                  joinChannel={joinChannel}\n                  userChannels={userChannels}\n                  match={match}\n                />\n              ))}\n            </Fragment>\n          ) : filteredChannels ? (\n            <Fragment>\n              {filteredChannels.map((channel) => (\n                <ChannelItem\n                  key={channel._id}\n                  channel={channel}\n                  joinChannel={joinChannel}\n                  userChannels={userChannels}\n                  match={match}\n                />\n              ))}\n            </Fragment>\n          ) : null}\n        </ul>\n      ) : (\n        <div className=\"center mt-1\">\n          <Spinner />\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MyChannels;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\chat\\Chat.js",["122","123","124"],"import React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport setAuthToken from \"../../functions/setAuthToken\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport { isObjId } from \"../../functions/helperFunctions\";\nimport av from \"../../img/av.png\";\nconst moment = require(\"moment\");\n\nconst Chat = ({ match, setHome, socket, user }) => {\n  const [id, setId] = useState(match.params.id);\n  const [current, setCurrent] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [messages2, setMessages2] = useState([]);\n\n  const ChannelContext = useContext(channelContext);\n  const {\n    userChannels,\n    messages,\n    addMessage,\n    setLastMessages,\n  } = ChannelContext;\n\n  useEffect(() => {\n    if (match.params.id && messages2.length !== 0) {\n      if (localStorage.getItem(\"token\")) {\n        setAuthToken(localStorage.getItem(\"token\"));\n      }\n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const data = {\n        channelId: messages2[messages2.length - 1].channelId,\n        lastMessage: messages2[messages2.length - 1]._id,\n      };\n      setLastMessages({\n        channelId: data.channelId,\n        lastMessage: data.lastMessage,\n      });\n      if (isObjId(messages2[messages2.length - 1]._id)) {\n        axios\n          .post(\"/api/messages/lastMessages\", data, config)\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      }\n    }\n  }, [match.params.id, messages2]);\n\n  useEffect(() => {\n    if (userChannels && userChannels.length !== 0) {\n      const channel = userChannels.channels.find((val) => val._id === id);\n      if (id && channel) {\n        setCurrent({ channel, joined: true });\n      } else if (id && !channel) {\n        setLoading(true);\n        axios\n          .get(`/api/channel/single/${id}`)\n          .then((res) => {\n            setLoading(null);\n            setCurrent({ channel: res.data, joined: false });\n          })\n          .catch((err) => {\n            setLoading(null);\n            setCurrent(null);\n          });\n      }\n    }\n  }, [id, userChannels]);\n\n  useEffect(() => {\n    setHome(current);\n    if (current) {\n      if (messages.length !== 0) {\n        if (messages.find((val) => val.channelId === current.channel._id))\n          setMessages2(\n            messages.find((val) => val.channelId === current.channel._id)\n              .messages\n          );\n      }\n    }\n  }, [current, messages]);\n\n  useEffect(() => {\n    setId(match.params.id);\n  }, [match.params.id]);\n\n  const submit = (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    if (text.trim() !== \"\") {\n      const data = {\n        text,\n        channelId: id,\n        senderName: user.username,\n        createdAt: Date.now(),\n        _id: uuidv4(),\n      };\n      addMessage(data);\n      socket.emit(\"sendMessage\", { id, text, token });\n    }\n  };\n\n  return (\n    <section className=\"chat\">\n      <div className=\"top\">\n        <div className=\"container2\">\n          <p className=\"title\">{current && current.channel.name}</p>\n        </div>\n      </div>\n      {current && current.joined && (\n        <Fragment>\n          <SimpleBar className=\"simpleBar\">\n            <div className=\"container2\">\n              <div className=\"messages\">\n                {messages2.map((message) => (\n                  <div key={message._id} className=\"message\">\n                    <div className=\"image\">\n                      <img src={av} alt=\"\" />\n                    </div>\n                    <div className=\"other\">\n                      <p>\n                        {message.senderName}\n                        <small style={{ marginLeft: \"15px\" }}>\n                          {moment(message.createdAt).calendar()}\n                        </small>\n                      </p>\n                      <p>{message.text}</p>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </SimpleBar>\n\n          <form action=\"\" onSubmit={submit}>\n            <div className=\"cover2\">\n              <input\n                type=\"text\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                placeholder=\"Type message here\"\n              />\n              <button>\n                <i class=\"far fa-paper-plane\"></i>\n              </button>\n            </div>\n          </form>\n        </Fragment>\n      )}\n    </section>\n  );\n};\nexport default Chat;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav.js",["125"],"import React, { useContext, useState, useEffect } from \"react\";\nimport AllChannels from \"../channel/AllChannels\";\nimport MyChannels from \"../channel/MyChannels\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport { tint } from \"../../functions/helperFunctions\";\n\nconst SideNav = ({ user, match }) => {\n  const [tabs, setTabs] = useState(0);\n  const [text, setText] = useState(\"\");\n\n  const ChannelContext = useContext(channelContext);\n  const { searchChannels, filterUserChannels } = ChannelContext;\n\n  useEffect(() => {\n    const selectTab = document.getElementById(\"selectTab\");\n    const tabs = document.querySelector(\".tabs\");\n    const icon = document.querySelector(\"#selectTab i\");\n    var count = 0;\n    selectTab.addEventListener(\"click\", () => {\n      count++;\n      if (count % 2 !== 0) {\n        tabs.style.display = \"block\";\n        icon.style.transform = \"rotate(180deg)\";\n      } else {\n        tabs.style.display = \"none\";\n        icon.style.transform = \"rotate(360deg)\";\n      }\n    });\n    tabs.addEventListener(\"click\", () => {\n      count++;\n      icon.style.transform = \"rotate(360deg)\";\n      tabs.style.display = \"none\";\n    });\n  }, []);\n\n  useEffect(() => {\n    tabs === 0 ? searchChannels(text) : filterUserChannels(text);\n  }, [text]);\n  const showAdd = () => {\n    const addChannel = document.querySelector(\".addChannel\");\n    tint();\n    addChannel.style.display = \"block\";\n  };\n  return (\n    <div className=\"rel\">\n      <div className=\"top\">\n        <ul className=\"tabs\">\n          <li onClick={() => setTabs(0)}>All Channels</li>\n          <li onClick={() => setTabs(1)}>My Channels</li>\n        </ul>\n        <p id=\"selectTab\">\n          <i class=\"fas fa-angle-down\"></i>{\" \"}\n          {tabs === 0 ? \"All Channels\" : \"My Channels\"}\n        </p>\n        <i className=\"fas fa-plus iconBtn\" onClick={showAdd}></i>\n      </div>\n      <SimpleBar style={{ maxHeight: \"83%\" }}>\n        <div className=\"body\">\n          <div className=\"pad\">\n            <div className=\"cover\">\n              <i class=\"fas fa-search\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n                onChange={(e) => setText(e.target.value.trim())}\n              />\n            </div>\n          </div>\n          {tabs === 0 ? (\n            <AllChannels match={match} text={text} />\n          ) : (\n            <MyChannels match={match} text={text} />\n          )}\n        </div>\n      </SimpleBar>\n      <div className=\"bottom\">\n        <p>{user && user.username}</p> <i class=\"fas fa-angle-down\"></i>\n      </div>\n    </div>\n  );\n};\n\nexport default SideNav;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav2.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\MessagesState.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesContext.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesReducer.js",["126"],"import { GET_MESSAGES, ADD_MESSAGE } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload,\n      };\n\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.map((message) =>\n          message.channelId === action.payload.channelId\n            ? { ...message, messages: [...message.messages, action.payload] }\n            : message\n        ),\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n",{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":1,"nodeType":"133","endLine":49,"endColumn":3},{"ruleId":"134","severity":1,"message":"135","line":9,"column":8,"nodeType":"136","messageId":"137","endLine":9,"endColumn":13},{"ruleId":"138","severity":1,"message":"139","line":32,"column":6,"nodeType":"140","endLine":32,"endColumn":8,"suggestions":"141"},{"ruleId":"138","severity":1,"message":"142","line":41,"column":6,"nodeType":"140","endLine":41,"endColumn":12,"suggestions":"143"},{"ruleId":"134","severity":1,"message":"144","line":57,"column":13,"nodeType":"136","messageId":"137","endLine":57,"endColumn":19},{"ruleId":"138","severity":1,"message":"145","line":102,"column":6,"nodeType":"140","endLine":102,"endColumn":20,"suggestions":"146"},{"ruleId":"131","severity":1,"message":"132","line":14,"column":1,"nodeType":"133","endLine":117,"endColumn":3},{"ruleId":"134","severity":1,"message":"147","line":13,"column":11,"nodeType":"136","messageId":"137","endLine":13,"endColumn":15},{"ruleId":"134","severity":1,"message":"148","line":1,"column":39,"nodeType":"136","messageId":"137","endLine":1,"endColumn":48},{"ruleId":"134","severity":1,"message":"149","line":15,"column":10,"nodeType":"136","messageId":"137","endLine":15,"endColumn":17},{"ruleId":"138","severity":1,"message":"150","line":52,"column":6,"nodeType":"140","endLine":52,"endColumn":34,"suggestions":"151"},{"ruleId":"138","severity":1,"message":"152","line":86,"column":6,"nodeType":"140","endLine":86,"endColumn":25,"suggestions":"153"},{"ruleId":"138","severity":1,"message":"154","line":40,"column":6,"nodeType":"140","endLine":40,"endColumn":12,"suggestions":"155"},{"ruleId":"131","severity":1,"message":"132","line":3,"column":1,"nodeType":"133","endLine":26,"endColumn":3},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has missing dependencies: 'getChannels', 'getLastMessages', 'getMessages', and 'getUserChannels'. Either include them or remove the dependency array.",["159"],"'config' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'addMessage'. Either include it or remove the dependency array.",["160"],"'user' is assigned a value but never used.","'useEffect' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'setLastMessages'. Either include it or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'setHome'. Either include it or remove the dependency array. If 'setHome' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["162"],"React Hook useEffect has missing dependencies: 'filterUserChannels', 'searchChannels', and 'tabs'. Either include them or remove the dependency array.",["163"],"no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"168","fix":"169"},{"desc":"170","fix":"171"},{"desc":"172","fix":"173"},{"desc":"174","fix":"175"},"Update the dependencies array to be: [getUser]",{"range":"176","text":"177"},"Update the dependencies array to be: [getChannels, getLastMessages, getMessages, getUserChannels, user]",{"range":"178","text":"179"},"Update the dependencies array to be: [addMessage, userChannels]",{"range":"180","text":"181"},"Update the dependencies array to be: [match.params.id, messages2, setLastMessages]",{"range":"182","text":"183"},"Update the dependencies array to be: [current, messages, setHome]",{"range":"184","text":"185"},"Update the dependencies array to be: [filterUserChannels, searchChannels, tabs, text]",{"range":"186","text":"187"},[918,920],"[getUser]",[1063,1069],"[getChannels, getLastMessages, getMessages, getUserChannels, user]",[2645,2659],"[addMessage, userChannels]",[1712,1740],"[match.params.id, messages2, setLastMessages]",[2685,2704],"[current, messages, setHome]",[1367,1373],"[filterUserChannels, searchChannels, tabs, text]"]