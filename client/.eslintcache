[{"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\index.js":"1","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\App.js":"2","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Register.js":"3","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Login.js":"4","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\AuthState.js":"5","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authReducer.js":"6","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authContext.js":"7","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\types.js":"8","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\setAuthToken.js":"9","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\main\\Home.js":"10","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\routing\\PrivateRoutes.js":"11","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\ChannelState.js":"12","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelContext.js":"13","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelReducer.js":"14","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\helperFunctions.js":"15","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\layout\\Spinner.js":"16","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\AllChannels.js":"17","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\ChannelItem.js":"18","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\MyChannels.js":"19","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\chat\\Chat.js":"20","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav.js":"21","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav2.js":"22","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\MessagesState.js":"23","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesContext.js":"24","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesReducer.js":"25"},{"size":408,"mtime":1611564173546,"results":"26","hashOfConfig":"27"},{"size":1065,"mtime":1610178918000,"results":"28","hashOfConfig":"27"},{"size":1515,"mtime":1610178918000,"results":"29","hashOfConfig":"27"},{"size":1207,"mtime":1610178918000,"results":"30","hashOfConfig":"27"},{"size":2332,"mtime":1611317615542,"results":"31","hashOfConfig":"27"},{"size":1328,"mtime":1611317622023,"results":"32","hashOfConfig":"27"},{"size":106,"mtime":1610178918000,"results":"33","hashOfConfig":"27"},{"size":826,"mtime":1611563523564,"results":"34","hashOfConfig":"27"},{"size":242,"mtime":1610178918000,"results":"35","hashOfConfig":"27"},{"size":5934,"mtime":1611583741017,"results":"36","hashOfConfig":"27"},{"size":569,"mtime":1610178918000,"results":"37","hashOfConfig":"27"},{"size":4504,"mtime":1611563816909,"results":"38","hashOfConfig":"27"},{"size":112,"mtime":1610178918000,"results":"39","hashOfConfig":"27"},{"size":3114,"mtime":1611572847698,"results":"40","hashOfConfig":"27"},{"size":1447,"mtime":1610261402872,"results":"41","hashOfConfig":"27"},{"size":1197,"mtime":1611583871201,"results":"42","hashOfConfig":"27"},{"size":1235,"mtime":1610178918000,"results":"43","hashOfConfig":"27"},{"size":1646,"mtime":1611584068945,"results":"44","hashOfConfig":"27"},{"size":1488,"mtime":1610178918000,"results":"45","hashOfConfig":"27"},{"size":7681,"mtime":1611584177267,"results":"46","hashOfConfig":"27"},{"size":3832,"mtime":1611586998800,"results":"47","hashOfConfig":"27"},{"size":3499,"mtime":1611586943029,"results":"48","hashOfConfig":"27"},{"size":1073,"mtime":1610178918000,"results":"49","hashOfConfig":"27"},{"size":114,"mtime":1610178918000,"results":"50","hashOfConfig":"27"},{"size":561,"mtime":1610178918000,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1o7ubov",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"54"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"93"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"54"},"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\index.js",[],["113","114"],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\App.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Register.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\auth\\Login.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\AuthState.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authReducer.js",["115"],"import {\n  AUTH,\n  AUTH_FAIL,\n  GET_USER,\n  SET_LOADER,\n  GET_USER_FAIL,\n  UPDATE_PROFILE,\n  SET_LOADER2,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case AUTH:\n      localStorage.setItem(\"token\", action.payload.token);\n      return {\n        ...state,\n        token: action.payload.token,\n        error: null,\n        isAuthenticated: true,\n        loading: null,\n      };\n    case AUTH_FAIL:\n      return {\n        ...state,\n        token: null,\n        error: action.payload,\n        isAuthenticated: null,\n        loading: null,\n      };\n\n    case GET_USER:\n      return {\n        ...state,\n        user: action.payload,\n        loading: null,\n        isAuthenticated: true,\n        error: null,\n      };\n\n    case GET_USER_FAIL:\n      return {\n        ...state,\n        user: null,\n        loading: null,\n        isAuthenticated: null,\n        error: action.payload,\n      };\n\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        status: { type: \"success\", msg: action.payload.msg },\n        user: action.payload.user2,\n        loading2: null,\n      };\n\n    case SET_LOADER:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case SET_LOADER2:\n      return {\n        ...state,\n        loading2: true,\n      };\n    default:\n      return state;\n  }\n};\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\auth\\authContext.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\types.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\setAuthToken.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\main\\Home.js",["116","117","118","119"],"import React, { useEffect, useContext, useState, Fragment } from \"react\";\nimport authContext from \"../../context/auth/authContext\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport Chat from \"../chat/Chat\";\nimport SideNav from \"../nav/SideNav\";\nimport SideNav2 from \"../nav/SideNav2\";\nimport io from \"socket.io-client\";\nimport Spinner from \"../layout/Spinner\";\nimport Alert from \"@material-ui/lab/Alert\";\nconst ENDPOINT = \"/\";\nvar socket;\n\nconst Home = ({ match }) => {\n  const [current, setCurrent] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [avatar, setAvatar] = useState(null);\n  const [mainStatus, setMainStatus] = useState(null);\n\n  const AuthContext = useContext(authContext);\n  const { getUser, user, updateProfile, loading2, status } = AuthContext;\n\n  const ChannelContext = useContext(channelContext);\n  const {\n    getChannels,\n    createChannel,\n    getUserChannels,\n    userChannels,\n    getMessages,\n    addMessage,\n    getLastMessages,\n    status2,\n  } = ChannelContext;\n\n  useEffect(() => {\n    getUser();\n    socket = io.connect(ENDPOINT);\n\n    const file = document.getElementById(\"file\");\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      getChannels();\n      getUserChannels();\n      getMessages();\n      getLastMessages();\n      setUsername(user.username);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const sidenav2 = document.querySelector(\".sideNav2\");\n    const menu = document.querySelector(\".menu\");\n    if (current) {\n      if (current.joined) {\n        sidenav2.style.animation = \"slideOut 0.1s ease-in forwards\";\n        menu.className = \"fas fa-times menu\";\n      }\n    }\n  }, [current]);\n\n  const clear = (e) => {\n    const overlay = document.querySelector(\".overlay\");\n    const addChannel = document.querySelector(\".addChannel\");\n    overlay.style.display = \"none\";\n    addChannel.style.display = \"none\";\n  };\n\n  const clear2 = (e) => {\n    const overlay = document.querySelector(\".overlay\");\n    const profile = document.querySelector(\".profile\");\n    overlay.style.display = \"none\";\n    profile.style.display = \"none\";\n  };\n\n  const makeChannel = (e) => {\n    e.preventDefault();\n    const name = document.querySelector(\"#makeChannel #name\").value;\n    const desc = document.querySelector(\"#makeChannel textarea\").value;\n    if (name.trim() !== \"\") {\n      createChannel({ name, desc });\n    }\n  };\n\n  useEffect(() => {\n    if (userChannels && userChannels.length !== 0) {\n      const rooms = userChannels.channels.map((channel) => channel._id);\n\n      socket.emit(\"join\", rooms);\n\n      socket.on(\"recieveMessage\", (message) => {\n        addMessage(message);\n      });\n    }\n  }, [userChannels]);\n\n  const selectAv = () => {\n    const file = document.getElementById(\"file\");\n    file.click();\n  };\n\n  const save = (e) => {\n    e.preventDefault();\n    let formData = new FormData();\n    if (avatar) {\n      formData.append(\"avatar\", avatar);\n    }\n    if (username && username.trim() !== \"\") {\n      formData.append(\"data\", JSON.stringify({ username }));\n    }\n\n    updateProfile(formData);\n    console.log(formData);\n  };\n\n  useEffect(() => {\n    const statusView = document.querySelector(\".status\");\n    if (status) {\n      setMainStatus(status);\n      statusView.style.animation = \"alertIn 0.2s ease-in forwards\";\n      setTimeout(() => {\n        statusView.style.animation = \"alertOut 0.2s ease-in forwards\";\n      }, 2000);\n    }\n  }, [status]);\n\n  useEffect(() => {\n    const statusView = document.querySelector(\".status\");\n    if (status2) {\n      setMainStatus(status2);\n      statusView.style.animation = \"alertIn 0.2s ease-in forwards\";\n      setTimeout(() => {\n        statusView.style.animation = \"alertOut 0.2s ease-in forwards\";\n      }, 2000);\n    }\n  }, [status2]);\n\n  return (\n    <div className=\"Home\">\n      <div className=\"status\">\n        {mainStatus && (\n          <Alert severity={mainStatus.type}>{mainStatus.msg}</Alert>\n        )}\n      </div>\n      <div className=\"overlay\"></div>\n      <div className=\"addChannel centralize\">\n        <h4>New Channel</h4>\n        <form id=\"makeChannel\" action=\"\" onSubmit={makeChannel}>\n          <i className=\"fas fa-times\" onClick={clear}></i>\n          <input id=\"name\" type=\"text\" placeholder=\"Channel name\" />\n          <textarea name=\"\" placeholder=\"Channel description\"></textarea>\n          <input type=\"submit\" value=\"Save\" />\n        </form>\n      </div>\n\n      <div className=\"profile centralize\">\n        {!loading2 ? (\n          <Fragment>\n            <h4>Profile</h4>\n            <form action=\"\">\n              <i className=\"fas fa-times\" onClick={clear2}></i>\n              <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n              <input\n                type=\"file\"\n                id=\"file\"\n                name=\"avatar\"\n                onChange={(e) => setAvatar(e.target.files[0])}\n              />\n              {avatar && (\n                <p style={{ margin: \"0px\", marginBottom: \"8px\" }}>\n                  Avatar: {avatar.name}\n                </p>\n              )}\n              <input type=\"button\" value=\"Upload avatar\" onClick={selectAv} />\n              <input type=\"submit\" value=\"Save\" onClick={save} />\n            </form>\n          </Fragment>\n        ) : (\n          <div className=\"center\" style={{ height: \"100%\" }}>\n            <Spinner type={2} />\n          </div>\n        )}\n      </div>\n\n      <div className=\"sideNav\">\n        <SideNav match={match} user={user} />\n      </div>\n      <div className=\"sideNav2\">\n        <SideNav2\n          match={match}\n          user={user}\n          userChannels={userChannels}\n          current={current}\n        />\n      </div>\n      <div className=\"main\">\n        <Chat user={user} socket={socket} match={match} setHome={setCurrent} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\routing\\PrivateRoutes.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\ChannelState.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelContext.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\channelContext\\channelReducer.js",["120"],"import {\n  CREATE_CHANNEL,\n  CREATE_CHANNEL_FAIL,\n  GET_CHANNELS,\n  SET_LOADER,\n  SEARCH_CHANNELS,\n  JOIN_CHANNEL,\n  GET_MY_CHANNELS,\n  FILTER_USER_CHANNELS,\n  GET_MESSAGES,\n  ADD_MESSAGE,\n  GET_LAST_MESSAGES,\n  SET_LAST_MESSAGES,\n} from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case SET_LOADER:\n      return {\n        ...state,\n        loading: true,\n      };\n\n    case CREATE_CHANNEL:\n      return {\n        ...state,\n        loading: null,\n        channels: [...state.channels, action.payload.channel],\n        userChannels: {\n          ...state.userChannels,\n          channels: [...state.userChannels.channels, action.payload.channel],\n          members: [...state.userChannels.members, [action.payload.member]],\n        },\n        messages: [\n          ...state.messages,\n          { channelId: action.payload.channel._id, messages: [] },\n        ],\n        status2: { type: \"success\", msg: \"Channel created successfully\" },\n      };\n\n    case CREATE_CHANNEL_FAIL:\n      return {\n        ...state,\n        loading: null,\n        status2: { type: \"error\", msg: action.payload },\n      };\n\n    case GET_CHANNELS:\n      return {\n        ...state,\n        loading: null,\n        channels: action.payload,\n      };\n\n    case GET_MY_CHANNELS:\n      return {\n        ...state,\n        loading: null,\n        userChannels: action.payload,\n      };\n\n    case SEARCH_CHANNELS:\n      return {\n        ...state,\n        loading: null,\n        searchedChannels: action.payload,\n      };\n\n    case FILTER_USER_CHANNELS:\n      return {\n        ...state,\n        filteredChannels: state.userChannels.filter((channel) =>\n          channel.name.toLowerCase().includes(action.payload.toLowerCase())\n        ),\n      };\n\n    case JOIN_CHANNEL:\n      console.log(action.payload);\n      return {\n        ...state,\n        userChannels: {\n          ...state.userChannels,\n          channels: [...state.userChannels.channels, action.payload.channel],\n          members: [...state.userChannels.members, action.payload.members],\n        },\n        messages: [...state.messages, action.payload.messages],\n      };\n\n    case GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload,\n      };\n\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.map((message) =>\n          message.channelId === action.payload.channelId\n            ? { ...message, messages: [...message.messages, action.payload] }\n            : message\n        ),\n      };\n\n    case GET_LAST_MESSAGES:\n      return {\n        ...state,\n        lastMessages: action.payload,\n      };\n\n    case SET_LAST_MESSAGES:\n      return {\n        ...state,\n        lastMessages: state.lastMessages.some((lm) => (lm) =>\n          lm.channelId === action.payload.channelId\n        )\n          ? state.lastMessages.map((lm) =>\n              lm.channelId === action.payload.channelId\n                ? { ...lm, ...action.payload }\n                : lm\n            )\n          : [...state.lastMessages, action.payload],\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\functions\\helperFunctions.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\layout\\Spinner.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\AllChannels.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\ChannelItem.js",["121"],"import React, { useContext } from \"react\";\nimport {\n  getInitials,\n  truncate,\n  getUnread,\n} from \"../../functions/helperFunctions\";\nimport authContext from \"../../context/auth/authContext\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport { Link } from \"react-router-dom\";\n\nconst ChannelItem = ({ channel, match }) => {\n  const AuthContext = useContext(authContext);\n  const { user } = AuthContext;\n\n  const ChannelContext = useContext(channelContext);\n  const { joinChannel, userChannels, lastMessages, messages } = ChannelContext;\n\n  const join = (id) => {\n    joinChannel(id);\n  };\n\n  const open = () => {\n    const sidenav2 = document.querySelector(\".sideNav2\");\n    if (userChannels && userChannels.length !== 0) {\n      if (userChannels.channels.some((val) => val._id === channel._id)) {\n        sidenav2.style.animation = \"slideOut 0.1s ease-in forwards\";\n      }\n    }\n  };\n\n  return (\n    <Link to={`/${channel._id}`}>\n      {userChannels && userChannels.length !== 0 ? (\n        <li onClick={open} className=\"channelItem\">\n          {getUnread(channel._id, lastMessages, messages) && (\n            <i className=\"fas fa-circle unread\"></i>\n          )}\n          <span>{getInitials(channel.name)}</span>\n          <p>{truncate(channel.name)}</p>\n          {!userChannels.channels.some((val) => val._id === channel._id) ? (\n            <i\n              className=\"fas fa-plus iconBtn\"\n              onClick={() => join(channel._id)}\n            ></i>\n          ) : (\n            <i className=\"fas fa-check\"></i>\n          )}\n        </li>\n      ) : null}\n    </Link>\n  );\n};\n\nexport default ChannelItem;\n",["122","123"],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\channel\\MyChannels.js",["124"],"import React, { useContext, Fragment, useEffect } from \"react\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport ChannelItem from \"./ChannelItem\";\nimport Spinner from \"../layout/Spinner\";\n\nconst MyChannels = ({ text, match }) => {\n  const ChannelContext = useContext(channelContext);\n  const {\n    loading,\n    joinChannel,\n    userChannels,\n    filteredChannels,\n  } = ChannelContext;\n\n  return (\n    <Fragment>\n      {!loading ? (\n        <ul className=\"channelList\">\n          {!filteredChannels && text === \"\" ? (\n            <Fragment>\n              {userChannels.channels.map((channel) => (\n                <ChannelItem\n                  key={channel._id}\n                  channel={channel}\n                  joinChannel={joinChannel}\n                  userChannels={userChannels}\n                  match={match}\n                />\n              ))}\n            </Fragment>\n          ) : filteredChannels ? (\n            <Fragment>\n              {filteredChannels.map((channel) => (\n                <ChannelItem\n                  key={channel._id}\n                  channel={channel}\n                  joinChannel={joinChannel}\n                  userChannels={userChannels}\n                  match={match}\n                />\n              ))}\n            </Fragment>\n          ) : null}\n        </ul>\n      ) : (\n        <div className=\"center mt-1\">\n          <Spinner />\n        </div>\n      )}\n    </Fragment>\n  );\n};\n\nexport default MyChannels;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\chat\\Chat.js",["125","126","127","128"],"import React, { useState, useEffect, useContext, Fragment } from \"react\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport setAuthToken from \"../../functions/setAuthToken\";\nimport axios from \"axios\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport { isObjId } from \"../../functions/helperFunctions\";\nimport av from \"../../img/av.png\";\nconst moment = require(\"moment\");\n\nconst Chat = ({ match, setHome, socket, user }) => {\n  const [id, setId] = useState(match.params.id);\n  const [current, setCurrent] = useState(null);\n  const [loading, setLoading] = useState(null);\n  const [text, setText] = useState(\"\");\n  const [messages2, setMessages2] = useState([]);\n  const [unread, setUnread] = useState(null);\n  const [count, setCount] = useState(0);\n\n  const ChannelContext = useContext(channelContext);\n  const {\n    userChannels,\n    messages,\n    addMessage,\n    setLastMessages,\n    lastMessages,\n  } = ChannelContext;\n\n  useEffect(() => {\n    if (match.params.id !== undefined) {\n      setCount(0);\n      setUnread(null);\n      setMessages2([]);\n    }\n  }, [match.params.id]);\n\n  useEffect(() => {\n    if (match.params.id !== undefined) {\n      const lastMessage = lastMessages.find(\n        (lm) => lm.channelId === match.params.id\n      );\n      if (messages2.length !== 0 && lastMessage) {\n        if (\n          lastMessage.lastMessage !== messages2[messages2.length - 1]._id &&\n          count === 0\n        ) {\n          setUnread(lastMessage.lastMessage);\n          setCount(count + 1);\n\n          const lm = document.getElementById(lastMessage.lastMessage);\n          if (lm) {\n            const scrollTo = lm.offsetTop;\n            document.querySelector(\n              \"#sm .simplebar-content-wrapper\"\n            ).scrollTop = scrollTo;\n          }\n        } else if (\n          lastMessage.lastMessage === messages2[messages2.length - 1]._id\n        ) {\n          setCount(count + 1);\n\n          const lm = document.getElementById(lastMessage.lastMessage);\n          if (lm) {\n            const scrollTo = lm.offsetTop;\n            document.querySelector(\n              \"#sm .simplebar-content-wrapper\"\n            ).scrollTop = scrollTo;\n          }\n        }\n      }\n    }\n  }, [match.params.id, messages2, lastMessages]);\n\n  useEffect(() => {\n    if (match.params.id && messages2.length !== 0) {\n      if (localStorage.getItem(\"token\")) {\n        setAuthToken(localStorage.getItem(\"token\"));\n      }\n      const config = {\n        header: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const data = {\n        channelId: messages2[messages2.length - 1].channelId,\n        lastMessage: messages2[messages2.length - 1]._id,\n      };\n\n      setLastMessages({\n        channelId: data.channelId,\n        lastMessage: data.lastMessage,\n      });\n\n      if (isObjId(messages2[messages2.length - 1]._id)) {\n        axios\n          .post(\"/api/messages/lastMessages\", data, config)\n          .then((res) => console.log(res.data))\n          .catch((err) => console.log(err));\n      }\n    }\n  }, [match.params.id, messages2]);\n\n  useEffect(() => {\n    if (userChannels && userChannels.length !== 0) {\n      const channel = userChannels.channels.find((val) => val._id === id);\n      if (id && channel) {\n        setCurrent({ channel, joined: true });\n      } else if (id && !channel) {\n        setLoading(true);\n        axios\n          .get(`/api/channel/single/${id}`)\n          .then((res) => {\n            setLoading(null);\n            setCurrent({ channel: res.data, joined: false });\n          })\n          .catch((err) => {\n            setLoading(null);\n            setCurrent(null);\n          });\n      }\n    }\n  }, [id, userChannels]);\n\n  useEffect(() => {\n    setHome(current);\n    if (current) {\n      if (messages.length !== 0) {\n        if (messages.find((val) => val.channelId === current.channel._id))\n          setMessages2(\n            messages.find((val) => val.channelId === current.channel._id)\n              .messages\n          );\n      }\n    }\n  }, [current, messages]);\n\n  useEffect(() => {\n    setId(match.params.id);\n  }, [match.params.id]);\n\n  const submit = (e) => {\n    e.preventDefault();\n    const token = localStorage.getItem(\"token\");\n    if (text.trim() !== \"\") {\n      const data = {\n        text,\n        channelId: id,\n        senderName: user.username,\n        createdAt: Date.now(),\n        _id: uuidv4(),\n        avatar: user.avatar,\n        senderId: user._id,\n      };\n      console.log(data);\n      addMessage(data);\n      socket.emit(\"sendMessage\", { id, text, token, avatar: user.avatar });\n      setCount(null);\n      setUnread(null);\n    }\n  };\n\n  useEffect(() => {\n    var count = 0;\n    const sidenav = document.querySelector(\".sideNav\");\n    const sidenav2 = document.querySelector(\".sideNav2\");\n    const menu = document.querySelector(\".menu\");\n    if (menu) {\n      menu.addEventListener(\"click\", () => {\n        count++;\n        if (count % 2 !== 0) {\n          sidenav.style.animation = \"slideIn 0.1s ease-in forwards\";\n          sidenav2.style.animation = \"slideIn 0.1s ease-in forwards\";\n          menu.className = \"fas fa-bars menu\";\n        } else {\n          sidenav.style.animation = \"slideOut 0.1s ease-in forwards\";\n          menu.className = \"fas fa-times menu\";\n        }\n      });\n    }\n  }, [current]);\n\n  return (\n    <section className=\"chat\">\n      <div className=\"top\">\n        <div className=\"container2\">\n          <div className=\"space\">\n            <p className=\"title\">{current && current.channel.name}</p>\n            {current && <i className=\"fas fa-bars menu\"></i>}\n          </div>\n        </div>\n      </div>\n      {current && current.joined && (\n        <Fragment>\n          <SimpleBar className=\"simpleBar\" id=\"sm\">\n            <div className=\"container2\">\n              <div className=\"messages\" id=\"ms\">\n                {messages2.map((message) => (\n                  <Fragment>\n                    <div key={message._id} id={message._id} className=\"message\">\n                      <div className=\"image\">\n                        <img\n                          src={\n                            message.avatar\n                              ? `/api/user/avatar/${message.senderId}`\n                              : av\n                          }\n                          alt=\"\"\n                        />\n                      </div>\n                      <div className=\"other\">\n                        <p>\n                          {message.senderName}\n                          <small style={{ marginLeft: \"15px\" }}>\n                            {moment(message.createdAt).calendar()}\n                          </small>\n                        </p>\n                        <p>{message.text}</p>\n                      </div>\n                    </div>\n                    {message._id === unread ? (\n                      <div id=\"um\">\n                        <span> UNREAD MESSAGES</span>\n                      </div>\n                    ) : null}\n                  </Fragment>\n                ))}\n              </div>\n            </div>\n          </SimpleBar>\n\n          <form action=\"\" onSubmit={submit}>\n            <div className=\"cover2\">\n              <input\n                type=\"text\"\n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                placeholder=\"Type message here\"\n              />\n              <button>\n                <i className=\"far fa-paper-plane\"></i>\n              </button>\n            </div>\n          </form>\n        </Fragment>\n      )}\n    </section>\n  );\n};\nexport default Chat;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav.js",["129"],"import React, { useContext, useState, useEffect } from \"react\";\nimport AllChannels from \"../channel/AllChannels\";\nimport MyChannels from \"../channel/MyChannels\";\nimport SimpleBar from \"simplebar-react\";\nimport \"simplebar/dist/simplebar.min.css\";\nimport channelContext from \"../../context/channelContext/channelContext\";\nimport { tint, truncate } from \"../../functions/helperFunctions\";\nimport av from \"../../img/av.png\";\n\nconst SideNav = ({ user, match }) => {\n  const [tabs, setTabs] = useState(0);\n  const [text, setText] = useState(\"\");\n\n  const ChannelContext = useContext(channelContext);\n  const { searchChannels, filterUserChannels } = ChannelContext;\n\n  useEffect(() => {\n    const selectTab = document.getElementById(\"selectTab\");\n    const tabs = document.querySelector(\".tabs\");\n    const icon = document.querySelector(\"#selectTab i\");\n    const bottom = document.querySelector(\".bottom\");\n    const options = document.querySelector(\".options\");\n    var count = 0;\n    var count2 = 0;\n    selectTab.addEventListener(\"click\", () => {\n      count++;\n      if (count % 2 !== 0) {\n        tabs.style.display = \"block\";\n        icon.style.transform = \"rotate(180deg)\";\n      } else {\n        tabs.style.display = \"none\";\n        icon.style.transform = \"rotate(360deg)\";\n      }\n    });\n    tabs.addEventListener(\"click\", () => {\n      count++;\n      icon.style.transform = \"rotate(360deg)\";\n      tabs.style.display = \"none\";\n    });\n\n    bottom.addEventListener(\"click\", () => {\n      count2++;\n      if (count2 % 2 !== 0) {\n        options.style.display = \"block\";\n      } else {\n        options.style.display = \"none\";\n      }\n    });\n  }, []);\n\n  useEffect(() => {\n    tabs === 0 ? searchChannels(text) : filterUserChannels(text);\n  }, [text]);\n  const showAdd = () => {\n    const addChannel = document.querySelector(\".addChannel\");\n    tint();\n    addChannel.style.display = \"block\";\n  };\n\n  const showProfile = () => {\n    const profile = document.querySelector(\".profile\");\n    profile.style.display = \"block\";\n    tint();\n  };\n\n  return (\n    <div className=\"rel\">\n      <div className=\"top\">\n        <ul className=\"tabs\">\n          <li onClick={() => setTabs(0)}>All Channels</li>\n          <li onClick={() => setTabs(1)}>My Channels</li>\n        </ul>\n        <p id=\"selectTab\">\n          <i className=\"fas fa-angle-down\"></i>{\" \"}\n          {tabs === 0 ? \"All Channels\" : \"My Channels\"}\n        </p>\n        <i className=\"fas fa-plus iconBtn\" onClick={showAdd}></i>\n      </div>\n      <SimpleBar style={{ maxHeight: \"83%\" }}>\n        <div className=\"body\">\n          <div className=\"pad\">\n            <div className=\"cover\">\n              <i className=\"fas fa-search\"></i>\n              <input\n                type=\"text\"\n                placeholder=\"Search\"\n                onChange={(e) => setText(e.target.value.trim())}\n              />\n            </div>\n          </div>\n          {tabs === 0 ? (\n            <AllChannels match={match} text={text} />\n          ) : (\n            <MyChannels match={match} text={text} />\n          )}\n        </div>\n      </SimpleBar>\n      <div className=\"bottom\">\n        <div className=\"cover\">\n          <ul className=\"options\">\n            <li onClick={showProfile}>\n              <i className=\"fas fa-user\"></i> My Profile\n            </li>\n            <li>\n              <i className=\"fas fa-sign-out-alt\"></i> Logout\n            </li>\n          </ul>\n          <div className=\"first\">\n            <div className=\"image\">\n              <img\n                src={user && user.avatar ? `/api/user/avatar/${user._id}` : av}\n                alt=\"\"\n              />\n            </div>\n            <p>{user && truncate(user.username)}</p>\n          </div>\n          <i className=\"fas fa-angle-down\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SideNav;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\components\\nav\\SideNav2.js",["130"],"import React, { Fragment, useEffect } from \"react\";\nimport av from \"../../img/av.png\";\nimport { tint, truncate } from \"../../functions/helperFunctions\";\nimport Chip from \"@material-ui/core/Chip\";\nimport FaceIcon from \"@material-ui/icons/Face\";\n\nconst SideNav2 = ({ current, userChannels, user }) => {\n  useEffect(() => {\n    const bottom = document.querySelectorAll(\".bottom\")[1];\n    const options = document.querySelectorAll(\".options\")[1];\n    var count = 0;\n\n    bottom.addEventListener(\"click\", () => {\n      count++;\n      if (count % 2 !== 0) {\n        options.style.display = \"block\";\n      } else {\n        options.style.display = \"none\";\n      }\n    });\n  }, []);\n\n  const showProfile = () => {\n    const profile = document.querySelector(\".profile\");\n    profile.style.display = \"block\";\n    tint();\n  };\n\n  const back = () => {\n    const sidenav2 = document.querySelector(\".sideNav2\");\n    sidenav2.style.animation = \"slideIn 0.1s ease-in forwards\";\n  };\n  return (\n    <div className=\"rel\">\n      <div className=\"top\">\n        <p onClick={back}>\n          <i className=\"fas fa-angle-left\"></i> All Channels\n        </p>\n      </div>\n\n      <div className=\"container2\">\n        {current && (\n          <Fragment>\n            <p className=\"title\">{current.channel.name}</p>\n            <p className=\"desc\">{current.channel.desc}</p>\n            <p className=\"members\">Members</p>\n            <ul>\n              {userChannels.members.map((arr) =>\n                arr.map((members) =>\n                  members.channel === current.channel._id ? (\n                    <li key={members._id}>\n                      {userChannels.channels.some(\n                        (val) =>\n                          members.channel === val._id &&\n                          members.memberId === val.creator\n                      ) ? (\n                        <span className=\"admin\">\n                          <Chip\n                            variant=\"outlined\"\n                            size=\"small\"\n                            label=\"Admin\"\n                            color=\"primary\"\n                          />\n                        </span>\n                      ) : null}\n                      <div className=\"image\">\n                        <img\n                          src={\n                            members.avatar\n                              ? `/api/user/avatar/${members.memberId}`\n                              : av\n                          }\n                          alt=\"\"\n                        />\n                      </div>\n                      <p>{truncate(members.username)}</p>\n                    </li>\n                  ) : null\n                )\n              )}\n            </ul>\n          </Fragment>\n        )}\n      </div>\n      <div className=\"bottom\">\n        <div className=\"cover\">\n          <ul className=\"options\">\n            <li onClick={showProfile}>\n              <i className=\"fas fa-user\"></i> My Profile\n            </li>\n            <li>\n              <i className=\"fas fa-sign-out-alt\"></i> Logout\n            </li>\n          </ul>\n          <div className=\"first\">\n            <div className=\"image\">\n              <img\n                src={user && user.avatar ? `/api/user/avatar/${user._id}` : av}\n                alt=\"\"\n              />\n            </div>\n            <p>{user && truncate(user.username)}</p>\n          </div>\n          <i className=\"fas fa-angle-down\"></i>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default SideNav2;\n","C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\MessagesState.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesContext.js",[],"C:\\Users\\PC\\Desktop\\dev\\fullstack\\chatGroup\\client\\src\\context\\messages\\messagesReducer.js",["131"],"import { GET_MESSAGES, ADD_MESSAGE } from \"../types\";\n\nexport default (state, action) => {\n  switch (action.type) {\n    case GET_MESSAGES:\n      return {\n        ...state,\n        messages: action.payload,\n      };\n\n    case ADD_MESSAGE:\n      return {\n        ...state,\n        messages: state.messages.map((message) =>\n          message.channelId === action.payload.channelId\n            ? { ...message, messages: [...message.messages, action.payload] }\n            : message\n        ),\n      };\n\n    default:\n      return {\n        ...state,\n      };\n  }\n};\n",{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":11,"column":1,"nodeType":"138","endLine":71,"endColumn":3},{"ruleId":"139","severity":1,"message":"140","line":38,"column":11,"nodeType":"141","messageId":"142","endLine":38,"endColumn":15},{"ruleId":"143","severity":1,"message":"144","line":39,"column":6,"nodeType":"145","endLine":39,"endColumn":8,"suggestions":"146"},{"ruleId":"143","severity":1,"message":"147","line":49,"column":6,"nodeType":"145","endLine":49,"endColumn":12,"suggestions":"148"},{"ruleId":"143","severity":1,"message":"149","line":95,"column":6,"nodeType":"145","endLine":95,"endColumn":20,"suggestions":"150"},{"ruleId":"136","severity":1,"message":"137","line":16,"column":1,"nodeType":"138","endLine":130,"endColumn":3},{"ruleId":"139","severity":1,"message":"151","line":13,"column":11,"nodeType":"141","messageId":"142","endLine":13,"endColumn":15},{"ruleId":"132","replacedBy":"152"},{"ruleId":"134","replacedBy":"153"},{"ruleId":"139","severity":1,"message":"154","line":1,"column":39,"nodeType":"141","messageId":"142","endLine":1,"endColumn":48},{"ruleId":"139","severity":1,"message":"155","line":15,"column":10,"nodeType":"141","messageId":"142","endLine":15,"endColumn":17},{"ruleId":"143","severity":1,"message":"156","line":73,"column":6,"nodeType":"145","endLine":73,"endColumn":48,"suggestions":"157"},{"ruleId":"143","severity":1,"message":"158","line":102,"column":6,"nodeType":"145","endLine":102,"endColumn":34,"suggestions":"159"},{"ruleId":"143","severity":1,"message":"160","line":136,"column":6,"nodeType":"145","endLine":136,"endColumn":25,"suggestions":"161"},{"ruleId":"143","severity":1,"message":"162","line":53,"column":6,"nodeType":"145","endLine":53,"endColumn":12,"suggestions":"163"},{"ruleId":"139","severity":1,"message":"164","line":5,"column":8,"nodeType":"141","messageId":"142","endLine":5,"endColumn":16},{"ruleId":"136","severity":1,"message":"137","line":3,"column":1,"nodeType":"138","endLine":26,"endColumn":3},"no-native-reassign",["165"],"no-negated-in-lhs",["166"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'file' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["167"],"React Hook useEffect has missing dependencies: 'getChannels', 'getLastMessages', 'getMessages', and 'getUserChannels'. Either include them or remove the dependency array.",["168"],"React Hook useEffect has a missing dependency: 'addMessage'. Either include it or remove the dependency array.",["169"],"'user' is assigned a value but never used.",["165"],["166"],"'useEffect' is defined but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'count'. Either include it or remove the dependency array. You can also do a functional update 'setCount(c => ...)' if you only need 'count' in the 'setCount' call.",["170"],"React Hook useEffect has a missing dependency: 'setLastMessages'. Either include it or remove the dependency array.",["171"],"React Hook useEffect has a missing dependency: 'setHome'. Either include it or remove the dependency array. If 'setHome' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["172"],"React Hook useEffect has missing dependencies: 'filterUserChannels', 'searchChannels', and 'tabs'. Either include them or remove the dependency array.",["173"],"'FaceIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},{"desc":"178","fix":"179"},{"desc":"180","fix":"181"},{"desc":"182","fix":"183"},{"desc":"184","fix":"185"},{"desc":"186","fix":"187"},"Update the dependencies array to be: [getUser]",{"range":"188","text":"189"},"Update the dependencies array to be: [getChannels, getLastMessages, getMessages, getUserChannels, user]",{"range":"190","text":"191"},"Update the dependencies array to be: [addMessage, userChannels]",{"range":"192","text":"193"},"Update the dependencies array to be: [match.params.id, messages2, lastMessages, count]",{"range":"194","text":"195"},"Update the dependencies array to be: [match.params.id, messages2, setLastMessages]",{"range":"196","text":"197"},"Update the dependencies array to be: [current, messages, setHome]",{"range":"198","text":"199"},"Update the dependencies array to be: [filterUserChannels, searchChannels, tabs, text]",{"range":"200","text":"201"},[1175,1177],"[getUser]",[1354,1360],"[getChannels, getLastMessages, getMessages, getUserChannels, user]",[2682,2696],"[addMessage, userChannels]",[2304,2346],"[match.params.id, messages2, lastMessages, count]",[3138,3166],"[match.params.id, messages2, setLastMessages]",[4111,4130],"[current, messages, setHome]",[1746,1752],"[filterUserChannels, searchChannels, tabs, text]"]